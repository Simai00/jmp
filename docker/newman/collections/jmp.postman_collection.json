{
	"info": {
		"_postman_id": "3be735cc-a556-4bf4-902e-25082666eb80",
		"name": "jmp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "registration",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 34);",
													"vars.set('userId', 163);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-event-user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 9999);",
													"vars.set('userId', 9999);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\")",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-user-not-in-event",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 33);",
													"vars.set('userId', 161);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registration\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-no-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 33);",
													"vars.set('userId', 162);",
													"vars.set('registrationState', 2);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-registrationState",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 162);",
													"vars.set('reason', 'On Vacation');",
													"vars.set('registrationState', 9999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 34);",
													"vars.set('userId', 163);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-event-user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 9999);",
													"vars.set('userId', 9999);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-user-not-in-event",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 33);",
													"vars.set('userId', 161);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registration\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-no-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 162);",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-registrationState",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 162);",
													"vars.set('reason', 'On Vacation');",
													"vars.set('registrationState', 9999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "get",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"});",
													"",
													"pm.test(\"All fields are returned\", function() {",
													"    pm.response.to.have.jsonBody(\"registrationState\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 999);",
													"vars.set('userId', 999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-as-admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"});",
													"",
													"pm.test(\"All fields are returned\", function() {",
													"    pm.response.to.have.jsonBody(\"registrationState\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "get-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 999);",
													"vars.set('userId', 999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "get",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"});",
													"",
													"pm.test(\"All fields are returned\", function() {",
													"    pm.response.to.have.jsonBody(\"registrationState\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "get-not-found-as-nonadmin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e88b9f75-56be-47a8-9756-0afec218b053",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 29);",
													"vars.set('userId', 163);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e60d7214-9937-494a-bded-a1ad52338612",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('reason', 'Working');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    pm.expect(json.reason).to.eq(vars.get('reason'));",
													"    pm.expect(json.registrationState.id).to.eq(vars.get('registrationState'));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-event-user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 9999);",
													"vars.set('userId', 9999);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-no-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-registrationState",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('reason', 'On Vacation');",
													"vars.set('registrationState', 9999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-remove-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "02cf4e52-9d08-4720-ad43-35daf49e605a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('registrationState', 4);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8e6b74a4-525e-4f53-980a-a717d22241f2",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    pm.expect(json.registrationState.id).to.eq(vars.get('registrationState'));",
													"});",
													"",
													"pm.test(\"Reason is removed\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.reason).to.be.undefined;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('reason', 'Working');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    pm.expect(json.reason).to.eq(vars.get('reason'));",
													"    pm.expect(json.registrationState.id).to.eq(vars.get('registrationState'));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-event-user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 9999);",
													"vars.set('userId', 9999);",
													"vars.set('reason', ' ');",
													"vars.set('registrationState', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-no-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.reason\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request-invalid-registrationState",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('reason', 'On Vacation');",
													"vars.set('registrationState', 9999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.registrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-remove-reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "02cf4e52-9d08-4720-ad43-35daf49e605a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('registrationState', 4);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8e6b74a4-525e-4f53-980a-a717d22241f2",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    pm.expect(json.registrationState.id).to.eq(vars.get('registrationState'));",
													"});",
													"",
													"pm.test(\"Reason is removed\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.reason).to.be.undefined;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 30);",
													"vars.set('userId', 163);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 999999);",
													"vars.set('userId', 999999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', -1);",
													"vars.set('userId', 'dfdsf');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 162);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-as-admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 162);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c404b8ea-0207-4f67-beba-e26cec847a35",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e12f48db-8a8a-4069-af57-28f5929eaa79",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 32);",
													"vars.set('userId', 161);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 999999);",
													"vars.set('userId', 999999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', -1);",
													"vars.set('userId', '1 1');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventId\");",
													"    pm.response.to.have.jsonBody(\"errors.userId\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b68e5378-d393-45d8-bb0c-0e595ccdfdaa",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 163);",
													"vars.set('reason', 'On vacation');",
													"vars.set('registrationState', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21e3c9a9-2e07-4e77-a8ca-fa25812bb815",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.eventId).to.eq(vars.get('eventId'));",
													"    pm.expect(json.userId).to.eq(vars.get('userId'));",
													"    if(json.registrationState.reasonRequired) {",
													"        pm.expect(json.reason).to.exist;",
													"        pm.expect(json.registrationState.id).to.exist;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{admin-token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "eventId",
													"value": "{{eventId}}",
													"type": "text"
												},
												{
													"key": "userId",
													"value": "{{userId}}",
													"type": "text"
												},
												{
													"key": "reason",
													"value": "{{reason}}",
													"type": "text"
												},
												{
													"key": "registrationState",
													"value": "{{registrationState}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/registration",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration"
											]
										}
									},
									"response": []
								},
								{
									"name": "/registration-as-nonadmin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c0f6c653-0191-496d-bcdf-00231f656c12",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 35);",
													"vars.set('userId', 163);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "27425c1a-fb6b-4ebd-ad3a-4bb502e55dc6",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/registration/{{eventId}}/{{userId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"registration",
												"{{eventId}}",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b4deff3c-a155-4d62-8fe8-c4a5d47862de",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c9cc5da7-fade-47e6-83a7-a534c3f9a074",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f00ac54b-70be-426f-84d4-e21af942fa0c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77c52282-1842-447a-be63-6041be5e6c24",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "list",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1ae84744-dd91-45e5-a44c-ae46043e8a80",
												"exec": [
													"pm.variables.set(\"limit\", 100);",
													"pm.variables.set(\"offset\", 0);",
													"pm.variables.set(\"eventType\", 1);",
													"pm.variables.set(\"group\", 5);",
													"pm.variables.set(\"all\", 1);",
													"pm.variables.set(\"elapsed\", true);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cd7bd1b-66a9-4be2-a080-26fb3840b234",
												"exec": [
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"Event type is \" + pm.variables.get(\"eventType\"), function () {",
													"    var jsonData = pm.response.json();",
													"    jsonData.forEach(function(obj) {",
													"        pm.expect(obj.eventType.id).to.eql(pm.variables.get(\"eventType\"));",
													"    });",
													"});",
													"",
													"pm.test(\"Group is \" +pm.variables.get(\"group\"), function() {",
													"    var jsonData = pm.response.json();",
													"    jsonData.forEach(function(obj) {",
													"        ",
													"        groups = obj.groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.includes(pm.variables.get(\"group\"));",
													"    }); ",
													"})",
													"",
													"pm.test(\"Max results is \" + pm.variables.get(\"limit\"), function () {",
													"    pm.expect(pm.response.json()).to.length.of.at.most(pm.variables.get(\"limit\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events?eventType={{eventType}}&group={{group}}&limit={{limit}}&offset={{offset}}&all={{all}}&elapsed={{elapsed}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											],
											"query": [
												{
													"key": "eventType",
													"value": "{{eventType}}"
												},
												{
													"key": "group",
													"value": "{{group}}"
												},
												{
													"key": "limit",
													"value": "{{limit}}"
												},
												{
													"key": "offset",
													"value": "{{offset}}"
												},
												{
													"key": "all",
													"value": "{{all}}"
												},
												{
													"key": "elapsed",
													"value": "{{elapsed}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1ae84744-dd91-45e5-a44c-ae46043e8a80",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cd7bd1b-66a9-4be2-a080-26fb3840b234",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.group\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.limit\");",
													"    pm.response.to.have.jsonBody(\"errors.offset\");",
													"    pm.response.to.have.jsonBody(\"errors.all\");",
													"    pm.response.to.have.jsonBody(\"errors.elapsed\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events?eventType=no-number&group=no-number&limit=no-number&offset=no-number&all=no-boolean&elapsed=no-boolean",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											],
											"query": [
												{
													"key": "eventType",
													"value": "no-number"
												},
												{
													"key": "group",
													"value": "no-number"
												},
												{
													"key": "limit",
													"value": "no-number"
												},
												{
													"key": "offset",
													"value": "no-number"
												},
												{
													"key": "all",
													"value": "no-boolean"
												},
												{
													"key": "elapsed",
													"value": "no-boolean"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/events/{id:[0-9]+}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a005a991-d494-4595-9501-bd9f2c430aa1",
												"exec": [
													"pm.variables.set(\"id\", 29)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1bcd4ad3-1f25-4fa1-98e3-d5722dc595c9",
												"exec": [
													"pm.test(\"Event Id is \" + pm.variables.get(\"id\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.id).to.eql(pm.variables.get(\"id\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/events/{{id}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events/{id:[0-9]+}-as-admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a005a991-d494-4595-9501-bd9f2c430aa1",
												"exec": [
													"pm.variables.set(\"id\", 31)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1bcd4ad3-1f25-4fa1-98e3-d5722dc595c9",
												"exec": [
													"pm.test(\"Event Id is \" + pm.variables.get(\"id\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.id).to.eql(pm.variables.get(\"id\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/events/{{id}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{id}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6213222f-da5e-4cdd-a895-110c3344e56a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1cad7524-1b6b-49a2-b6e7-2a6caf345686",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/events-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1ae84744-dd91-45e5-a44c-ae46043e8a80",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cd7bd1b-66a9-4be2-a080-26fb3840b234",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events?all=1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											],
											"query": [
												{
													"key": "all",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1ae84744-dd91-45e5-a44c-ae46043e8a80",
												"exec": [
													"pm.variables.set(\"limit\", 3);",
													"pm.variables.set(\"offset\", 0);",
													"pm.variables.set(\"eventType\", 1);",
													"pm.variables.set(\"group\", 6);",
													"pm.variables.set(\"elapsed\", true);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cd7bd1b-66a9-4be2-a080-26fb3840b234",
												"exec": [
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"Event type is \" + pm.variables.get(\"eventType\"), function () {",
													"    var jsonData = pm.response.json();",
													"    jsonData.forEach(function(obj) {",
													"        pm.expect(obj.eventType.id).to.eql(pm.variables.get(\"eventType\"));",
													"    });",
													"});",
													"",
													"pm.test(\"Group is \" +pm.variables.get(\"group\"), function() {",
													"    var jsonData = pm.response.json();",
													"    jsonData.forEach(function(obj) {",
													"        ",
													"        groups = obj.groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.includes(pm.variables.get(\"group\"));",
													"    }); ",
													"})",
													"",
													"pm.test(\"Max results is \" + pm.variables.get(\"limit\"), function () {",
													"    pm.expect(pm.response.json().length).to.eql(pm.variables.get(\"limit\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events?eventType={{eventType}}&group={{group}}&limit={{limit}}&offset={{offset}}&elapsed={{elapsed}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											],
											"query": [
												{
													"key": "eventType",
													"value": "{{eventType}}"
												},
												{
													"key": "group",
													"value": "{{group}}"
												},
												{
													"key": "limit",
													"value": "{{limit}}"
												},
												{
													"key": "offset",
													"value": "{{offset}}"
												},
												{
													"key": "elapsed",
													"value": "{{elapsed}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1ae84744-dd91-45e5-a44c-ae46043e8a80",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "2cd7bd1b-66a9-4be2-a080-26fb3840b234",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.group\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.limit\");",
													"    pm.response.to.have.jsonBody(\"errors.offset\");",
													"    pm.response.to.have.jsonBody(\"errors.all\");",
													"    pm.response.to.have.jsonBody(\"errors.elapsed\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events?eventType=no-number&group=no-number&limit=no-number&offset=no-number&all=no-boolean&elapsed=no-boolean",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											],
											"query": [
												{
													"key": "eventType",
													"value": "no-number"
												},
												{
													"key": "group",
													"value": "no-number"
												},
												{
													"key": "limit",
													"value": "no-number"
												},
												{
													"key": "offset",
													"value": "no-number"
												},
												{
													"key": "all",
													"value": "no-boolean"
												},
												{
													"key": "elapsed",
													"value": "no-boolean"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/events/{id:[0-9]+}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a005a991-d494-4595-9501-bd9f2c430aa1",
												"exec": [
													"pm.variables.set(\"id\", 31)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1bcd4ad3-1f25-4fa1-98e3-d5722dc595c9",
												"exec": [
													"pm.test(\"Event Id is \" + pm.variables.get(\"id\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.id).to.eql(pm.variables.get(\"id\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/events/{{id}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events/{id:[0-9]+}-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a005a991-d494-4595-9501-bd9f2c430aa1",
												"exec": [
													"pm.variables.set(\"id\", 29)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1bcd4ad3-1f25-4fa1-98e3-d5722dc595c9",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost/api/v1/events/{{id}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{id}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3b9a7edf-020b-4a49-92e5-e1c9ef37b0ba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "488dbf94-8aa9-4465-8989-50f8fca3c1a9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "create",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups[1]', 7);",
													"pm.variables.set('groups', [6,7]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Event title is \" + pm.variables.get(\"title\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.title).to.eql(pm.variables.get(\"title\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"groupsExpected = pm.variables.get('groups');",
													"",
													"pm.test(\"Groups are \" + groupsExpected, function() {",
													"        groups = pm.response.json().groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.have.members(groupsExpected);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('description', ' ');",
													"pm.variables.set('place', ' ');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.title\");",
													"    pm.response.to.have.jsonBody(\"errors.from\");",
													"    pm.response.to.have.jsonBody(\"errors.to\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.defaultRegistrationState\");",
													"    pm.response.to.have.jsonBody(\"errors.groups\");",
													"    pm.response.to.have.jsonBody(\"errors.description\");",
													"    pm.response.to.have.jsonBody(\"errors.place\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request-invalid-data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 99990);",
													"pm.variables.set('defaultRegistrationState', 99990);",
													"pm.variables.set('groups[0]', 99990);",
													"pm.variables.set('groups[1]', 99990);",
													"pm.variables.set('groups', [199990,299990]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.groups\");",
													"    pm.response.to.have.jsonBody(\"errors.defaultRegistrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6678a213-3ad1-4225-9ba4-313cf782ffe9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "480611a7-ce4a-46b3-9afe-2ebf65e43fba",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/events-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups[1]', 7);",
													"pm.variables.set('groups', [6,7]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5b4cb00c-2242-4d4e-8a2b-f4c3c9a4c789",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9e080a62-b8fb-431b-864b-78fa18ed0b04",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups[1]', 7);",
													"pm.variables.set('groups', [6,7]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Event title is \" + pm.variables.get(\"title\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.title).to.eql(pm.variables.get(\"title\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"groupsExpected = pm.variables.get('groups');",
													"",
													"pm.test(\"Groups are \" + groupsExpected, function() {",
													"        groups = pm.response.json().groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.have.members(groupsExpected);",
													"});",
													"",
													"// Set the user id used by the next request",
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"created-event-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"vars = pm.variables;",
													"",
													"eventId = pm.environment.get(\"created-event-id\");",
													"vars.set('eventId', eventId);",
													"",
													"pm.variables.set('title', 'older');",
													"pm.variables.set('from', '2005-12-29T01:02');",
													"pm.variables.set('to', '2006-12-31T01:02');",
													"pm.variables.set('description', 'This is an updated test event');",
													"pm.variables.set('place', 'Poland');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups', [6]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Event title is \" + pm.variables.get(\"title\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.title).to.eql(pm.variables.get(\"title\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"groupsExpected = pm.variables.get('groups');",
													"",
													"pm.test(\"Groups are \" + groupsExpected, function() {",
													"        groups = pm.response.json().groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.have.members(groupsExpected);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events/{{eventId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-optional-params",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"vars = pm.variables;",
													"",
													"eventId = pm.environment.get(\"created-event-id\");",
													"vars.set('eventId', eventId);",
													"",
													"pm.variables.set('title', 'older');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups', [6]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Event title is \" + pm.variables.get(\"title\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.title).to.eql(pm.variables.get(\"title\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"groupsExpected = pm.variables.get('groups');",
													"",
													"pm.test(\"Groups are \" + groupsExpected, function() {",
													"        groups = pm.response.json().groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.have.members(groupsExpected);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events/{{eventId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"vars = pm.variables;",
													"",
													"eventId = pm.environment.get(\"created-event-id\");",
													"vars.set('eventId', eventId);",
													"",
													"pm.variables.set('title', ' ');",
													"pm.variables.set('from', '200fds9T01:02');",
													"pm.variables.set('to', '2dsf02');",
													"pm.variables.set('description', ' ');",
													"pm.variables.set('place', ' ');",
													"pm.variables.set('eventType', -1);",
													"pm.variables.set('defaultRegistrationState', -1);",
													"pm.variables.set('groups[0]', -1);",
													"pm.variables.set('groups', [-1]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.title\");",
													"    pm.response.to.have.jsonBody(\"errors.from\");",
													"    pm.response.to.have.jsonBody(\"errors.to\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.defaultRegistrationState\");",
													"    pm.response.to.have.jsonBody(\"errors.groups\");",
													"    pm.response.to.have.jsonBody(\"errors.description\");",
													"    pm.response.to.have.jsonBody(\"errors.place\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events/{{eventId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-bad-request-invalid-data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"vars = pm.variables;",
													"",
													"eventId = pm.environment.get(\"created-event-id\");",
													"vars.set('eventId', eventId);",
													"",
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 99990);",
													"pm.variables.set('defaultRegistrationState', 99990);",
													"pm.variables.set('groups[0]', 99990);",
													"pm.variables.set('groups[1]', 99990);",
													"pm.variables.set('groups', [199990,299990]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.eventType\");",
													"    pm.response.to.have.jsonBody(\"errors.groups\");",
													"    pm.response.to.have.jsonBody(\"errors.defaultRegistrationState\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events/{{eventId}}",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "02922758-0433-4182-8426-7e010f4a933b",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "20ca7773-7360-40b0-9481-fd5173808172",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/events-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "02922758-0433-4182-8426-7e010f4a933b",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "20ca7773-7360-40b0-9481-fd5173808172",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/events-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "02922758-0433-4182-8426-7e010f4a933b",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "20ca7773-7360-40b0-9481-fd5173808172",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/events",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5bfe8f7c-267d-484b-986b-82a3a36a1f17",
												"exec": [
													"pm.variables.set('title', 'test-event');",
													"pm.variables.set('from', '2005-12-30T01:02');",
													"pm.variables.set('to', '2005-12-31T01:02');",
													"pm.variables.set('description', 'This is a test event');",
													"pm.variables.set('place', 'Switzerland');",
													"pm.variables.set('eventType', 1);",
													"pm.variables.set('defaultRegistrationState', 1);",
													"pm.variables.set('groups[0]', 6);",
													"pm.variables.set('groups[1]', 7);",
													"pm.variables.set('groups', [6,7]);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "290b4411-0657-425c-82f1-7c02a9ff6fde",
												"exec": [
													"pm.test(\"Event title is \" + pm.variables.get(\"title\"), function() {",
													"    json = pm.response.json();",
													"    ",
													"    pm.expect(json.title).to.eql(pm.variables.get(\"title\"));",
													"});",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"groupsExpected = pm.variables.get('groups');",
													"",
													"pm.test(\"Groups are \" + groupsExpected, function() {",
													"        groups = pm.response.json().groups.map(function(obj) {",
													"            return obj.id;",
													"        });",
													"        ",
													"        pm.expect(groups).to.be.an('array').that.have.members(groupsExpected);",
													"});",
													"",
													"// Set the user id used by the next request",
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"created-event-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "from",
													"value": "{{from}}",
													"type": "text"
												},
												{
													"key": "to",
													"value": "{{to}}",
													"type": "text"
												},
												{
													"key": "place",
													"value": "{{place}}",
													"type": "text"
												},
												{
													"key": "description",
													"value": "{{description}}",
													"type": "text"
												},
												{
													"key": "eventType",
													"value": "{{eventType}}",
													"type": "text"
												},
												{
													"key": "defaultRegistrationState",
													"value": "{{defaultRegistrationState}}",
													"type": "text"
												},
												{
													"key": "groups[0]",
													"value": "{{groups[0]}}",
													"type": "text"
												},
												{
													"key": "groups[1]",
													"value": "{{groups[1]}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "localhost/api/v1/events",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "899aedd1-4a10-4f41-af43-f5275474fea8",
												"exec": [
													"vars = pm.variables;",
													"",
													"eventId = pm.environment.get(\"created-event-id\");",
													"vars.set('eventId', eventId);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3377481b-2cf1-4828-ac0b-98f5677430d1",
												"exec": [
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "899aedd1-4a10-4f41-af43-f5275474fea8",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 999999);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3377481b-2cf1-4828-ac0b-98f5677430d1",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3dced430-86bb-407b-bacf-f654daa37a67",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "84d129c1-61e2-4786-8c9b-f01b5cb30712",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/delete-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "899aedd1-4a10-4f41-af43-f5275474fea8",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', 123);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3377481b-2cf1-4828-ac0b-98f5677430d1",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "899aedd1-4a10-4f41-af43-f5275474fea8",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventId', -1);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3377481b-2cf1-4828-ac0b-98f5677430d1",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/events/{{eventId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"events",
												"{{eventId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3dced430-86bb-407b-bacf-f654daa37a67",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "84d129c1-61e2-4786-8c9b-f01b5cb30712",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f00ac54b-70be-426f-84d4-e21af942fa0c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77c52282-1842-447a-be63-6041be5e6c24",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "get",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"All fields are returned\", function () {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.eq(163);",
													"    pm.expect(json.username).to.eq('adam');",
													"    pm.expect(json.lastname).to.eq('Fawell');",
													"    pm.expect(json.firstname).to.eq('Adam');",
													"    pm.expect(json.passwordChange).to.be.false;",
													"    pm.expect(json.isAdmin).to.be.true;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user-invalid-token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "401a874f-fa3a-4a88-ad7a-86cb7e0a87e8",
												"exec": [
													"pm.test(\"Status is 401\", function () {",
													"    pm.response.to.have.status(401)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "invalid",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"All fields are returned\", function () {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.eq(161);",
													"    pm.expect(json.username).to.eq('allen');",
													"    pm.expect(json.lastname).to.eq('Burdon');",
													"    pm.expect(json.firstname).to.eq('Allen');",
													"    pm.expect(json.passwordChange).to.be.false;",
													"    pm.expect(json.isAdmin).to.be.false;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user-invalid-token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "401a874f-fa3a-4a88-ad7a-86cb7e0a87e8",
												"exec": [
													"pm.test(\"Status is 401\", function () {",
													"    pm.response.to.have.status(401)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "invalid",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/user",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/user/change-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "pass4dev",
													"type": "text"
												},
												{
													"key": "password",
													"value": "pass4dev",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user/change-password-bad-request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"    pm.response.to.have.jsonBody(\"errors.newPassword\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "0",
													"type": "text"
												},
												{
													"key": "password",
													"value": "ss d",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user/change-password-wrong-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "wrong_password",
													"type": "text"
												},
												{
													"key": "password",
													"value": "blablabla",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/user/change-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "pass4dev",
													"type": "text"
												},
												{
													"key": "password",
													"value": "pass4dev",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user/change-password-bad-request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"    pm.response.to.have.jsonBody(\"errors.newPassword\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "0",
													"type": "text"
												},
												{
													"key": "password",
													"value": "ss d",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								},
								{
									"name": "/user/change-password-wrong-password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc238ba1-ec33-4458-87fc-504134fa99a8",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "newPassword",
													"value": "wrong_password",
													"type": "text"
												},
												{
													"key": "password",
													"value": "blablabla",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/user/change-password",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"user",
												"change-password"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'hans');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.username).to.eq(vars.get('username'));",
													"    pm.expect(json.firstname).to.eq(vars.get('firstname'));",
													"    pm.expect(json.lastname).to.eq(vars.get('lastname'));",
													"    pm.expect(json.email).to.eq(vars.get('email'));",
													"    passwordChange = Boolean(vars.get('passwordChange'));",
													"    pm.expect(json.passwordChange).to.eq(passwordChange);",
													"    isAdmin = Boolean(vars.get('isAdmin'));",
													"    pm.expect(json.isAdmin).to.eq(isAdmin);",
													"});",
													"",
													"// Set the user id used by the next request",
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"created-user-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "1",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-already-exists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'hans');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 0);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.User\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('firstname', 'fds fs fds');",
													"vars.set('lastname', 'dsfa fdsfa fds');",
													"vars.set('email', 'no-email')",
													"vars.set('passwordChange', 9999);",
													"vars.set('isAdmin', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.username\");",
													"    pm.response.to.have.jsonBody(\"errors.lastname\");",
													"    pm.response.to.have.jsonBody(\"errors.firstname\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"    pm.response.to.have.jsonBody(\"errors.email\");",
													"    pm.response.to.have.jsonBody(\"errors.isAdmin\");",
													"    pm.response.to.have.jsonBody(\"errors.passwordChange\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8acc3808-4c65-418a-abaa-9ff514a8ac1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8ea68a2c-ea93-436f-bb56-76da6e606ab6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'hans');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', true);",
													"vars.set('isAdmin', false);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-already-exists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'hans');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('firstname', 'fds fs fds');",
													"vars.set('lastname', 'dsfa fdsfa fds');",
													"vars.set('email', 'no-email')",
													"vars.set('passwordChange', 9999);",
													"vars.set('isAdmin', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8acc3808-4c65-418a-abaa-9ff514a8ac1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8ea68a2c-ea93-436f-bb56-76da6e606ab6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "list",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9634e05d-5935-4a70-9e8b-40ed6e5326ef",
												"exec": [
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "456532d6-ac68-4fff-8ee5-7e2098ff4845",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('group', 7);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users?group={{group}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "group",
													"value": "{{group}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-bad-request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9634e05d-5935-4a70-9e8b-40ed6e5326ef",
												"exec": [
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test('All errors are returned', function() {",
													"    pm.response.to.have.jsonBody('errors');",
													"    pm.response.to.have.jsonBody('errors.group');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "456532d6-ac68-4fff-8ee5-7e2098ff4845",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('group', -1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users?group={{group}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "group",
													"value": "{{group}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9634e05d-5935-4a70-9e8b-40ed6e5326ef",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "456532d6-ac68-4fff-8ee5-7e2098ff4845",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('group', 7);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users?group={{group}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "group",
													"value": "{{group}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-bad-request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9634e05d-5935-4a70-9e8b-40ed6e5326ef",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "456532d6-ac68-4fff-8ee5-7e2098ff4845",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('group', -1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users?group={{group}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "group",
													"value": "{{group}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bd3d6895-1708-46eb-84df-72ff65548b49",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b709005a-70c3-4357-8e3f-f34a8a7b424a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "get",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/users/id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "221d0dac-3803-4aa7-a1f8-98a1b42b299a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', 163)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4bde175-108e-41ff-b9bc-65dd521921fb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"All fields are returned\", function () {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.eq(163);",
													"    pm.expect(json.username).to.eq('adam');",
													"    pm.expect(json.lastname).to.eq('Fawell');",
													"    pm.expect(json.firstname).to.eq('Adam');",
													"    pm.expect(json.passwordChange).to.be.false;",
													"    pm.expect(json.isAdmin).to.be.true;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/id-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "221d0dac-3803-4aa7-a1f8-98a1b42b299a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', -1)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4bde175-108e-41ff-b9bc-65dd521921fb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/id-not-found-invalid-id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "221d0dac-3803-4aa7-a1f8-98a1b42b299a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', 999999)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4bde175-108e-41ff-b9bc-65dd521921fb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users/id-as-admin",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "221d0dac-3803-4aa7-a1f8-98a1b42b299a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', 161);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4bde175-108e-41ff-b9bc-65dd521921fb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200)",
													"});",
													"",
													"pm.test(\"All fields are returned\", function () {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.eq(vars.get('userId'));",
													"    pm.expect(json.username).to.eq('allen');",
													"    pm.expect(json.lastname).to.eq('Burdon');",
													"    pm.expect(json.firstname).to.eq('Allen');",
													"    pm.expect(json.passwordChange).to.be.false;",
													"    pm.expect(json.isAdmin).to.be.false;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/users/id-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "221d0dac-3803-4aa7-a1f8-98a1b42b299a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', 161)"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d4bde175-108e-41ff-b9bc-65dd521921fb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "981872b6-3c2b-4b15-8900-de4a248ce9cc",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ab7922b9-2588-4fa0-8dc8-af6915638ce3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'franz');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Franz');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.username).to.eq(vars.get('username'));",
													"    pm.expect(json.firstname).to.eq(vars.get('firstname'));",
													"    pm.expect(json.lastname).to.eq(vars.get('lastname'));",
													"    pm.expect(json.email).to.eq(vars.get('email'));",
													"    passwordChange = Boolean(vars.get('passwordChange'));",
													"    pm.expect(json.passwordChange).to.eq(passwordChange);",
													"    isAdmin = Boolean(vars.get('isAdmin'));",
													"    pm.expect(json.isAdmin).to.eq(isAdmin);",
													"});",
													"",
													"// Set the user id used by the next request",
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"created-user-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);",
													"",
													"vars.set('username', 'hasnsd');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 0);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.username).to.eq(vars.get('username'));",
													"    pm.expect(json.firstname).to.eq(vars.get('firstname'));",
													"    pm.expect(json.lastname).to.eq(vars.get('lastname'));",
													"    pm.expect(json.email).to.eq(vars.get('email'));",
													"    passwordChange = Boolean(vars.get('passwordChange'));",
													"    pm.expect(json.passwordChange).to.eq(passwordChange);",
													"    isAdmin = Boolean(vars.get('isAdmin'));",
													"    pm.expect(json.isAdmin).to.eq(isAdmin);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-already-exists",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);",
													"",
													"vars.set('username', 'allen');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 0);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.User\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);",
													"",
													"vars.set('username', 'fdsa fds');",
													"vars.set('password', 11);",
													"vars.set('firstname', 'fds fds');",
													"vars.set('lastname', 'fds fsd');",
													"vars.set('email', 'mueller.io')",
													"vars.set('passwordChange', -1);",
													"vars.set('isAdmin', 'fdsaf');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400)",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.username\");",
													"    pm.response.to.have.jsonBody(\"errors.lastname\");",
													"    pm.response.to.have.jsonBody(\"errors.firstname\");",
													"    pm.response.to.have.jsonBody(\"errors.password\");",
													"    pm.response.to.have.jsonBody(\"errors.email\");",
													"    pm.response.to.have.jsonBody(\"errors.isAdmin\");",
													"    pm.response.to.have.jsonBody(\"errors.passwordChange\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8acc3808-4c65-418a-abaa-9ff514a8ac1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8ea68a2c-ea93-436f-bb56-76da6e606ab6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/users-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);",
													"",
													"vars.set('username', 'hasnsd');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Hans');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 0);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/users-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', -1);",
													"vars.set('username', 'fdsa fds');",
													"vars.set('password', 11);",
													"vars.set('firstname', 'fds fds');",
													"vars.set('lastname', 'fds fsd');",
													"vars.set('email', 'mueller.io')",
													"vars.set('passwordChange', -1);",
													"vars.set('isAdmin', 'fdsaf');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404)",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8acc3808-4c65-418a-abaa-9ff514a8ac1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8ea68a2c-ea93-436f-bb56-76da6e606ab6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b07af48c-5769-4184-9325-f990f764dc3d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0d79ea72-a494-40ca-b09b-fa7b88fe2755",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "delete",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/users",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "59425a71-2ce3-40e1-bbaf-e442fb0d7f8e",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('username', 'deleter');",
													"vars.set('password', 'pass4dev');",
													"vars.set('firstname', 'Franz');",
													"vars.set('lastname', 'Müller');",
													"vars.set('email', 'me@mueller.io')",
													"vars.set('passwordChange', 1);",
													"vars.set('isAdmin', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91450cfe-a0e8-49ac-8722-a9cc04a448eb",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Values are correct\", function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.username).to.eq(vars.get('username'));",
													"    pm.expect(json.firstname).to.eq(vars.get('firstname'));",
													"    pm.expect(json.lastname).to.eq(vars.get('lastname'));",
													"    pm.expect(json.email).to.eq(vars.get('email'));",
													"    passwordChange = Boolean(vars.get('passwordChange'));",
													"    pm.expect(json.passwordChange).to.eq(passwordChange);",
													"    isAdmin = Boolean(vars.get('isAdmin'));",
													"    pm.expect(json.isAdmin).to.eq(isAdmin);",
													"});",
													"",
													"// Set the user id used by the next request",
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"created-user-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "firstname",
													"value": "{{firstname}}",
													"type": "text"
												},
												{
													"key": "lastname",
													"value": "{{lastname}}",
													"type": "text"
												},
												{
													"key": "email",
													"value": "{{email}}",
													"type": "text"
												},
												{
													"key": "passwordChange",
													"value": "{{passwordChange}}",
													"type": "text"
												},
												{
													"key": "isAdmin",
													"value": "{{isAdmin}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/users",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete-not-found-invalid-id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete-not-found",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', 999999);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"All errors are returned\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"    pm.response.to.have.jsonBody(\"errors.id\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/delete-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"userId = pm.environment.get(\"created-user-id\");",
													"vars.set('userId', userId);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/delete-not-found-invalid-id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4b5250b7-cc44-4c41-a8e2-5da1c3a718bb",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('userId', -1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d588c71-e972-4f13-b78e-86af048b4d6e",
												"exec": [
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/users/{{userId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"users",
												"{{userId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21a7337e-8297-4af9-b3a4-abf8ed7cd063",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "56fb81c1-11a7-4088-b994-ef407f365d79",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "event-types",
			"item": [
				{
					"name": "create",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/create",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "dd7391d1-9c3a-47ca-bf1f-ba4bade8c0e2",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('title', 'MyTitle');",
													"vars.set('color', '#FFFFFF');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8452f818-45b3-48bf-960e-cf4f7d2a392b",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('All values are correct', function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.title).to.be.eq(vars.get('title'));",
													"    pm.expect(json.color).to.be.eq(vars.get('color'));",
													"    pm.response.to.have.jsonBody('id');",
													"});",
													"",
													"pm.environment.set(\"created-event-type-id\", pm.response.json().id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "color",
													"value": "{{color}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types"
											]
										}
									},
									"response": []
								},
								{
									"name": "/create-bad-request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "dd7391d1-9c3a-47ca-bf1f-ba4bade8c0e2",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('title', ' ');",
													"vars.set('color', 'ä$p$püüp$$ä');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8452f818-45b3-48bf-960e-cf4f7d2a392b",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test('All values are correct', function() {",
													"    json = pm.response.json();",
													"    pm.response.to.have.jsonBody('errors');",
													"    pm.response.to.have.jsonBody('errors.title');",
													"    pm.response.to.have.jsonBody('errors.color')",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "color",
													"value": "{{color}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/create-forbidden",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5cb87b58-dac6-4049-b4c8-63d41fcf88f1",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('title', 'forbidden');",
													"vars.set('color', '#123456');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "995df635-0225-4f84-8b70-ccd18adf7ce7",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "{{title}}",
													"type": "text"
												},
												{
													"key": "color",
													"value": "{{color}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "list",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "/event-types",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('List is returned', function() {",
													"    json = pm.response.json();",
													"    pm.expect(json).to.be.an('array');",
													"});",
													"",
													"pm.test('First entry is correct', function() {",
													"    json = pm.response.json();",
													"    json = json[0];",
													"    pm.expect(json.id).to.be.eq(1);",
													"    pm.expect(json.title).to.be.eq('foo');",
													"    pm.expect(json.color).to.be.eq('#FF0000');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('First entry is correct', function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.be.eq(vars.get('eventTypeId'));",
													"    pm.expect(json.title).to.be.eq('foo');",
													"    pm.expect(json.color).to.be.eq('#FF0000');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', 1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}-not-found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', -1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}-not-found-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', 9999);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{admin-token}}",
										"type": "string"
									}
								]
							},
							"_postman_isSubFolder": true
						},
						{
							"name": "nonadmin",
							"item": [
								{
									"name": "/event-types",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('List is returned', function() {",
													"    json = pm.response.json();",
													"    pm.expect(json).to.be.an('array');",
													"});",
													"",
													"pm.test('First entry is correct', function() {",
													"    json = pm.response.json();",
													"    json = json[0];",
													"    pm.expect(json.id).to.be.eq(1);",
													"    pm.expect(json.title).to.be.eq('foo');",
													"    pm.expect(json.color).to.be.eq('#FF0000');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test('First entry is correct', function() {",
													"    json = pm.response.json();",
													"    pm.expect(json.id).to.be.eq(vars.get('eventTypeId'));",
													"    pm.expect(json.title).to.be.eq('foo');",
													"    pm.expect(json.color).to.be.eq('#FF0000');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', 1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}-not-found",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', -1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "/event-types/{id:[0-9]+}-not-found-invalid-id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8ce83910-af7f-4c28-ac59-56ffbdbfbf36",
												"exec": [
													"vars = pm.variables;",
													"",
													"pm.test(\"Status is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fe408da1-591e-4aa3-bd73-d88458b7878a",
												"exec": [
													"vars = pm.variables;",
													"",
													"vars.set('eventTypeId', 9999);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://localhost/api/v1/event-types/{{eventTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"path": [
												"api",
												"v1",
												"event-types",
												"{{eventTypeId}}"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{nonadmin-token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "10d5cfc6-8f81-41e2-91db-b04c8ff6439f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cbb93521-e1b2-47b4-b77e-2aed066b41c9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91bb1e02-d583-413e-9193-42bf78a2008b",
						"exec": [
							"pm.test(\"Test login\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.user.username).to.eql(pm.variables.get(\"username\"));",
							"    pm.expect(jsonData.token).to.be.a('string')",
							"});",
							"",
							"// Parsing the response returned by the request.",
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"admin-token\", jsonData.token);",
							"",
							"postman.setNextRequest(\"loginAsUser\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e5e26017-357c-4719-9f78-7874e5f46b2d",
						"exec": [
							"pm.variables.set(\"username\", \"adam\");",
							"pm.variables.set(\"password\", \"pass4dev\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost/api/v1/login",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "loginAsUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91bb1e02-d583-413e-9193-42bf78a2008b",
						"exec": [
							"pm.test(\"Test login\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.user.username).to.eql(pm.variables.get(\"username\"));",
							"    pm.expect(jsonData.token).to.be.a('string')",
							"});",
							"",
							"",
							"// Parsing the response returned by the request.",
							"var jsonData = pm.response.json();",
							"postman.setEnvironmentVariable(\"nonadmin-token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ff371bfe-d462-42c2-a26c-238d4e62e898",
						"exec": [
							"pm.variables.set(\"username\", \"allen\");",
							"pm.variables.set(\"password\", \"pass4dev\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost/api/v1/login",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		}
	]
}